Hi there this is only my  personal notes (not in technical way para chill lang ) & puns , it’s already 3AM ,para sa reviewer ko po ito . 
Yes you can share this. and credits  to Youtube Channel:  CodAffection for this CRUD tutorial https://www.youtube.com/watch?v=4fWWn2Pe2Mk. 
Siya po talaga ang source. Gusto ko lang mag-aral . Stay Safe and Wear Mask. 


CODE WITH CAUTION. lagi mag test sa local wag sa live. ** WAG TULARAN **
SELECT lang wag lang DROP DB hahahaha ;)

In this reviewer project I am using MAC OS, so some of my links  might not be applicable to you.
_______________________________________________________________________________________________________________________________________

Tools Needed:
Laptop, Internet, Presence of Mind, Focus, kape..  de joke

Install mo lahat ito .
Visual Studio Code : VSCode
Postman
XAMPP
 
Start na us :
_______________________________________________________________________________________________________________________________________

1. Start XAMPP (MySQL and Apache)
_______________________________________________________________________________________________________________________________________
2. Create Project Folder sa XAMPP > htdocs
_______________________________________________________________________________________________________________________________________
3. then Open VSCode, Open the Project Folder na ginawa mo sa htdocs
_______________________________________________________________________________________________________________________________________
4. Sa VSCode Menu , Click Terminal , New Terminal
_______________________________________________________________________________________________________________________________________
5. Sa Terminal i-path mo yung Project Folder mo .
Paano ? 
Sa Terminal type cd , then DRAG mo na lang sa Terminal . yung project folder mo . 


ito na mag tataype ka pang hacker o mala pang brainy .. pero kaya natin ito. 
_______________________________________________________________________________________________________________________________________
6. Sa Terminal type, npm init  

so enter enter lang
Then may nagtanong May sahod na ba? 
Sasagot ka  syempre kahit wala pa.
_______________________________________________________________________________________________________________________________________
  Is this ok? (yes)
7. Sa Terminal Type : yes
_______________________________________________________________________________________________________________________________________
8.  Mag iinstall tayo .  Install mysql, body-parser, express .
Links:
https://www.npmjs.com/package/mysql
https://www.npmjs.com/package/body-parser
https://www.npmjs.com/package/express

npm install —save library@version library@version	
npm install --save express@4.17.1 mysql@2.18.1 body-parser@1.19.0

Nag install ako agad ng nodemon, https://www.npmjs.com/package/nodemod for faster debugging
sudo npm i g- nodemon


Create a database: 

Use EmployeeDB; CREATE TABLE `employee` ( `EmpID` int(11) NOT NULL AUTO_INCREMENT, `Name` varchar(45) DEFAULT NULL, `EmpCode` varchar(45) DEFAULT NULL,
`Salary` int(11) DEFAULT NULL, PRIMARY KEY (`EmpID`) ) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci; 
LOCK TABLES `employee` WRITE; INSERT INTO `employee` VALUES (1, 'Gavin Cortez', 'EMP90', 265400),(2, 'Quinn Flynn', 'EMP94', 364600),
(3, 'Doris Wilder', 'EMP06', 316400),(4, 'Hermione Butler', 'EMP965', 417500); UNLOCK TABLES;  

Create a Procedural Statement: 
 
CREATE DEFINER=`root`@`localhost` PROCEDURE `EmployeeAddOrEdit`(
IN _EmpID int,
IN _Name varchar(45),
IN _EmpCode varchar(45),
IN _Salary int
)
BEGIN
IF _EmpID = 0 THEN
INSERT INTO employee(Name, EmpCode, Salary)
VALUES (_Name, _EmpCode, _Salary);

SET _EmpID = LAST_INSERT_ID();
ELSE
UPDATE Employee
SET
Name = _Name,
EmpCode = _EmpCode,
Salary = _Salary
WHERE EmpID = _EmpID;
        
END IF;
    
SELECT _EmpID as 'EmpID';
END
 
_______________________________________________________________________________________________________________________________________
Click APPLY : then ito makikita mo : 
_______________________________________________________________________________________________________________________________________
USE `EmployeeB`;
DROP procedure IF EXISTS `EmployeeAddOrEdit`;

DELIMITER $$
USE `EmployeeB`$$
CREATE PROCEDURE `EmployeeAddOrEdit`(
IN _EmpID INT,
IN _Name varchar(45),
IN _EmpCode varchar(45),
IN Salary int
)

BEGIN
IF _EmpID = 0 THEN
INSERT INTO employee (Name, EmpCode, Salary)
VALUES (_Name, _EmpCode, _Salary);

SET _EmpID = LAST_INSERT_ID();
ELSE
UPDATE Employee
SET
Name = _Name,
EmpCode = _EmpCode,
Salary = _Salary
WHERE EmpID = _EmpID;
        
END IF;
    
SELECT _EmpID as 'EmpID';
END$$

DELIMITER ;
_______________________________________________________________________________________________________________________________________
10. IN VSCDOE - Create an index.js file in your project folder 
_______________________________________________________________________________________________________________________________________
11. Time to CODE .
_______________________________________________________________________________________________________________________________________
const mysql = require('mysql');
const express = require('express');
var app = express();
const bodyparser = require('body-parser');

app.use(bodyparser.json());

var mysqlConnection = mysql.createConnection({
    host:'localhost',
    user: 'root',
    password: '',
    database: 'EmployeeB',
    multipleStatements: true,
});

mysqlConnection.connect((err) => {
    if(!err)
        console.log('connected to db');
    else
        console.log('DB connection failed \n Error : ' + JSON.stringify(err, undefined, 2));
});

app.listen(3000,()=>console.log('Express server running port no 3000'));



// GET ALL EMPLOYEES
app.get('/employees',  (req,res)=>{
    mysqlConnection.query('SELECT * FROM employee',(err,rows,fields) => {
        if(!err)
            res.send(rows);
            // console.log(rows);
        else
        console.log(err);
    });
});


//GET EMPLOYEE BY ID
app.get('/employees/:id',  (req,res)=>{
    mysqlConnection.query('SELECT * FROM employee WHERE EmpID = ?',[req.params.id],(err,rows,fields) =>{
        if(!err)
            res.send(rows);
        else
            console.log(err);
    });
});

_______________________________________________________________________________________________________________________________________
 /* COMPASRION NOTES FOR PART 1: sa intial part gumamit si Sir ng console .log then pinaltan din niya . Observe niyo ang difference */

// you can see in browser
  app.get('/employees', (req,res)=>{
  mysqlConnection.query('SELECT * FROM employee',(err,rows,fields) => {
  if(!err)
     res.send(rows);
    // console.log(rows);
  else
      console.log(err);
    });
});

//you can see terminal
app.get('/employees', (res,req)=>{
mysqlConnection.query('SELECT * FROM employee',(err,rows,fields) => {
  if(!err)
    res.send(rows);
    // console.log(rows);
  else
    console.log(err);
   });
});

_______________________________________________________________________________________________________________________________________
12. CODE AGAIN : 
_______________________________________________________________________________________________________________________________________

//delete EMPLOYEE BY ID
app.delete('/employees/:id',  (req,res)=>{
    mysqlConnection.query('delete from employee WHERE EmpID = ?',[req.params.id],(err,rows,fields) =>{
        if(!err)
            res.send('SALAMAT DOLE');
        else
            console.log(err);
    });
});


//insert an employee
app.post('/employees',  (req,res)=>{
    let emp = req.body;
    var sql = "SET @EmpID = ?; SET @Name = ?; SET @EmpCode = ?; SET @Salary = ?;  \
    CALL EmployeeAddOrEdit (@EmpID, @Name, @EmpCode, @Salary);";
    mysqlConnection.query(sql, [emp.EmpID, emp.Name, emp.EmpCode, emp.Salary],(err,rows,fields) =>{
        if(!err)
            rows.forEach(element => {
                if(element.constructor == Array)
                res.send("Inserted employee ID : " + element[0].EmpID);
            });
        else
            console.log(err);
    });
});

//update an employee
app.put('/employees', (req,res) => {
    let emp = req.body;
    var sql = "SET @EmpID =?; SET @Name = ?; SET @EmpCode = ?; SET @Salary=?; \
    CALL EmployeeAddOrEdit (@EmpID, @Name, @EmpCode, @Salary)";
    mysqlConnection.query(sql, [emp.EmpID, emp.Name, emp.EmpCode, emp.Salary],(err,rows,fields) =>{
        if(!err)
            res.send("Biatch Updated");
        else
            console.log(err);
    });

});

_______________________________________________________________________________________________________________________________________
COMPILE TIME:

GET 
Open Postman :
1. In Launchpad Tab , Click "Create a Request"
2. On the Left side click "GET" , in the textfield type : http://localhost:3000/employees
3. Select "Body"
4. Select Radio Button "raw"
5. Drop down , Select JSON
6. SEND 
7. Result: All data from the database 

POST
_______________________________________________________________________________________________________________________________________

Links that might help you along the WAY:
check if it listens to port 3000: https://stackoverflow.com/questions/18008620/node-js-express-js-app-only-works-on-port-3000
In this solution for port 3000: try to run this code:

CODE:

var express = require("express");
var app = express();

// sets port 8080 to default or unless otherwise specified in the environment
app.set('port', process.env.PORT || 8080);

app.get('/', function(req, res){
    res.send('hello world');
});

// Only works on 3000 regardless of what I set environment port to or how I set
// [value] in app.set('port', [value]).
// app.listen(3000);
app.listen(app.get('port'));
Okay that’s nice I got a code, but how to run it
Go to Terminal , Select Node, haha
node <file name> , enter
Pag gumana happy, pag hindi search ka pa.


2. 
mysql probs : https://stackoverflow.com/questions/16177465/column-count-of-mysql-proc-is-wrong-expected-20-found-16-the-table-is-probabl
Check mo yung XAMPP mo baka di lang naka start
possible sa version ng mysql mo yan
Sagot nakuha ko ay : I had the same problem when I updated XAMPP from xampp-osx-7.2.10 to 7.3.9 in MacOS Mohave. So the solution was:
Find the file mysql_upgrade in "Macintosh HD⁩ ▸ ⁨Applications⁩ ▸ ⁨XAMPP⁩ ▸ ⁨xamppfiles⁩ ▸ ⁨bin⁩" and double click on it.

_______________________________________________________________________________________________________________________________________



